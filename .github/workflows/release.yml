name: Create release as draft

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build-release:
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        format: ['bin']
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            format: msi
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            format: msi
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          rustflags: ''  # Keep, as otherwise the defaults will be used
          cache-key: ${{ matrix.target }}-${{ matrix.format }} # appended to default value

      - name: Setup nushell
        uses: hustcer/setup-nu@v3
        with:
          version: "*"

      - name: Install cargo-binstall
        # cargo-binstall is used on Linux runners to install 'cross' in release.nu
        # NOTE: we could try the following one-liner in release.nu:
        #   curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
        # But installing cargo-binstall here ensures it is in PATH before running release.nu
        if: ${{ runner.os }} == 'Linux'
        uses: cargo-bins/cargo-binstall@main

      - name: Build nur archive
        id: build
        run: nu .github/workflows/release-build.nu
        env:
          OS: ${{ matrix.os }}
          TARGET: ${{ matrix.target }}
          FORMAT: ${{ matrix.format }}

      - name: upload built binary as CI artifact
        uses: actions/upload-artifact@v4
        with:
          name: nur-build-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.format }}
          path: ${{ steps.build.outputs.archive }}

  draft-release:
    needs: [build-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: nur-build-*
          path: artifacts
          merge-multiple: true

      - name: Setup nushell
        uses: hustcer/setup-nu@v3
        with:
          version: "*"

      - name: Draft release with artifacts as assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: nu .github/workflows/release-draft.nu
